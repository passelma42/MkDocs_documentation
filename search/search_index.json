{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"#publish-with-actions","title":"Publish with Actions","text":"<pre><code>    .github/workflows   # Create folders\n    ci.yml                      # Create file for automated actions in Github\n</code></pre> ci.yml<pre><code>name: ci\non:\n  push:\n    branches:\n      - master\n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-python@v4\n        with:\n          python-version: 3.x\n      - uses: actions/cache@v2\n        with:\n          key: ${{ github.ref }}\n          path: .cache\n      - run: pip install mkdocs-material\n      - run: pip install pillow cairosvg\n      - run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"#add-to-github-pages","title":"Add to GitHub pages","text":"<p>Go to your resository on github</p> <ul> <li>Go to Settings &gt; Pages &gt; Build and deploymet &gt; <code>Deploy from a branch</code></li> <li>Goto Settings &gt; Pages &gt; Branch  and  select &gt;<code>gh-pages</code></li> </ul> <p>Now your ci.yml file should be deploid automatically.</p>"},{"location":"#publishdeploy-without-actions","title":"Publish/deploy without Actions","text":"<p>In Github enterprize Actions is not allowed (at least @UGent). You need to deploy manually. Full documentation is found here.</p>"},{"location":"#the-short-of-it","title":"The short of it","text":"<p>Consider this project layout</p> <pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre> <p>Issue following command in the project directory <pre><code>mkdocs gh-deploy\n</code></pre></p>"},{"location":"git/","title":"Git","text":""},{"location":"git/#step-1-generate-an-ssh-key-if-you-dont-already-have-one","title":"Step 1: Generate an SSH Key (if you don't already have one)","text":"<ol> <li>Generate a New SSH Key:</li> <li>Open your WSL terminal.</li> <li>Run the following command, replacing <code>your_email@example.com</code> with your GitHub email:      <pre><code>ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n</code></pre></li> <li>When prompted to \"Enter a file in which to save the key,\" press Enter to accept the default location.</li> <li> <p>You can choose to set a passphrase or leave it empty.</p> </li> <li> <p>Add the SSH Key to the SSH Agent:</p> </li> <li>Start the SSH agent in the background:      <pre><code>eval \"$(ssh-agent -s)\"\n</code></pre></li> <li>Add your SSH private key to the SSH agent:      <pre><code>ssh-add ~/.ssh/id_rsa\n</code></pre></li> </ol>"},{"location":"git/#step-2-add-your-ssh-key-to-your-github-account","title":"Step 2: Add Your SSH Key to Your GitHub Account","text":"<ol> <li>Copy the SSH Key to Your Clipboard:</li> <li>In your WSL terminal, run:      <pre><code>cat ~/.ssh/id_rsa.pub\n</code></pre></li> <li> <p>Copy the output, which is your SSH public key.</p> </li> <li> <p>Add the SSH Key to GitHub:</p> </li> <li>Go to GitHub and log in.</li> <li>In the upper-right corner, click your profile photo, then click Settings.</li> <li>In the left sidebar, click SSH and GPG keys.</li> <li>Click New SSH key.</li> <li>Provide a title for the key (e.g., \"WSL SSH Key\") and paste your SSH key into the \"Key\" field.</li> <li>Click Add SSH key.</li> </ol>"},{"location":"git/#step-3-verify-ssh-connection-to-github","title":"Step 3: Verify SSH Connection to GitHub","text":"<ol> <li>Test the SSH Connection:</li> <li>Run the following command in your WSL terminal:      <pre><code>ssh -T git@github.com\n</code></pre></li> <li>You should see a message like:      <pre><code>Hi your_username! You've successfully authenticated, but GitHub does not provide shell access.\n</code></pre></li> </ol>"},{"location":"git/#step-4-update-remote-url-to-use-ssh","title":"Step 4: Update Remote URL to Use SSH","text":"<ol> <li>Change the Remote URL in Your Repository:</li> <li>Navigate to your repository in the WSL terminal.</li> <li>Change the remote URL to use SSH instead of HTTPS:      <pre><code>git remote set-url origin git@github.com:your-username/your-repo.git\n</code></pre></li> </ol>"},{"location":"git/#step-5-push-to-your-repository","title":"Step 5: Push to Your Repository","text":"<ol> <li>Push Your Changes:</li> <li>Now, try pushing your changes again:      <pre><code>git push -u origin main\n</code></pre></li> </ol>"},{"location":"git/#summary-of-commands","title":"Summary of Commands","text":"<ol> <li> <p>Generate SSH key:    <pre><code>ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n</code></pre></p> </li> <li> <p>Start SSH agent and add key:    <pre><code>eval \"$(ssh-agent -s)\"\nssh-add ~/.ssh/id_rsa\n</code></pre></p> </li> <li> <p>Copy SSH key and add to GitHub:    <pre><code>cat ~/.ssh/id_rsa.pub\n</code></pre></p> </li> <li> <p>Verify SSH connection:    <pre><code>ssh -T git@github.com\n</code></pre></p> </li> <li> <p>Update remote URL and push:    <pre><code>git remote set-url origin git@github.com:your-username/your-repo.git\ngit push -u origin main\n</code></pre></p> </li> </ol> <p>By following these steps, you should be able to resolve the <code>Permission denied (publickey)</code> error and successfully push your changes to GitHub.</p>"},{"location":"page2/","title":"Markdown examples","text":""},{"location":"page2/#code-blocks","title":"code blocks","text":"pythonshell <pre><code># Hello world example (Python)\nprint(\"Hello World!\")\nzero_to_ten_double = [2*x for x in range(10)]\n</code></pre> <pre><code># Hello world example (Python)\nprint(\"Hello World!\")\nzero_to_ten_double = [2*x for x in range(10)]\n</code></pre>"},{"location":"page2/#code-blocks-with-title","title":"code blocks with title","text":"hello-world.py<pre><code># Hello world example (Python)\nprint(\"Hello World!\")\nzero_to_ten_double = [2*x for x in range(10)]\n</code></pre>"},{"location":"page2/#code-blocks-with-linenumbers","title":"code blocks with linenumbers","text":"<pre><code># Hello world example (Python)\nprint(\"Hello World!\")\nzero_to_ten_double = [2*x for x in range(10)]\n</code></pre>"},{"location":"page2/#emojis","title":"emojis","text":""},{"location":"page2/#add-notes","title":"add Notes","text":"<p>Note</p> <p>This is a note</p> <p>Danger</p> <p>This is a Danger</p> <p>Warning</p> <p>This is a warning</p> <p>Example</p> <p>This is an Example</p>"}]}